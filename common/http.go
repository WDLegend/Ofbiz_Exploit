package common

import (
	"fmt"
	"io"
	"net/http"
	"strings"
)

func SendHttpPost(url, body string) string {
	req, err := http.NewRequest("POST", url, strings.NewReader(body))
	if err != nil {
		fmt.Printf("[-] init new httprequest error: %v", err)
	}

	// Set the Content-Type header
	req.Header.Set("Content-Type", "application/x-www-form-urlencoded")

	// Set the custom Host header
	req.Host = "localhost"
	req.Header.Set("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.5195.102 Safari/537.36")

	// Perform the HTTP request
	resp, err := http.DefaultClient.Do(req)
	if err != nil {
		fmt.Printf("[-] send http package Error: %v", err)
	}
	defer resp.Body.Close()

	// Read and return the response body
	respBody, err := io.ReadAll(resp.Body)
	if err != nil {
		fmt.Printf("[-] read http body Error: %v", err)
	}

	return string(respBody)
}

func SendHttpGet(url string) string {
	req, err := http.NewRequest("GET", url, strings.NewReader(""))
	if err != nil {
		fmt.Printf("[-] init new httprequest error: %v", err)
	}

	// Set the custom Host header
	req.Host = "localhost"
	req.Header.Set("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.5195.102 Safari/537.36")

	// Perform the HTTP request
	resp, err := http.DefaultClient.Do(req)
	if err != nil {
		fmt.Printf("[-] send http package Error: %v", err)
	}
	defer resp.Body.Close()

	// Read and return the response body
	respBody, err := io.ReadAll(resp.Body)
	if err != nil {
		fmt.Printf("[-] read http body Error: %v", err)
	}

	return string(respBody)
}
